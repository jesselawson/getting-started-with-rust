<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>1: A new project on Getting Started with Programming in Rust</title><link>https://jesselawson.github.io/getting-started-with-rust/chapter1/</link><description>Recent content in 1: A new project on Getting Started with Programming in Rust</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 28 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://jesselawson.github.io/getting-started-with-rust/chapter1/index.xml" rel="self" type="application/rss+xml"/><item><title>The structure of new Rust projects</title><link>https://jesselawson.github.io/getting-started-with-rust/chapter1/structure/</link><pubDate>Sat, 28 May 2022 00:00:00 +0000</pubDate><guid>https://jesselawson.github.io/getting-started-with-rust/chapter1/structure/</guid><description>Inside a newly created Rust project, you&amp;rsquo;ll find three things:
A src folder, where your Rust code (Rust files end in .rs) lives A .gitignore file, because version control thinking is built-in A Cargo.toml file, which is the manifest file. This is the project configuration and dependencies script. This would be like the Gemfile in Ruby, or package.json in Node. Anytime we create a new project like this, Rust sticks in some default code for us.</description></item><item><title>Chapter 1 Checkpoint</title><link>https://jesselawson.github.io/getting-started-with-rust/chapter1/checkpoint/</link><pubDate>Sun, 29 May 2022 00:00:00 +0000</pubDate><guid>https://jesselawson.github.io/getting-started-with-rust/chapter1/checkpoint/</guid><description>Let&amp;rsquo;s recap:
Create a new Rust project with cargo new --bin my-neat-cli Build and run your project with cargo run In the next section, we&amp;rsquo;ll dive into the Rust language and start customizing our markdown compiler to make it feel like an actual program.
ðŸš€ First Checkpoint Reached! ðŸš€ "The best way out is always through." &amp;mdash;Robert Frost Before continuing, you should be able to confidently:
You may also wish to go back and review the first chapter.</description></item></channel></rss>